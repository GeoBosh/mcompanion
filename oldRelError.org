* mcompanion v0.5-2

The same error (see section "mcompanion v0.5-0" below) necessitated rebuilding mcompanion
v0.5-2 under R-3.5.2 and submitting as v0.5-3.
#+BEGIN_EXAMPLE
    using R version 3.5.3 (2019-03-11)
    using platform: x86_64-w64-mingw32 (64-bit)
    using session charset: ISO8859-1
    checking for file 'mcompanion/DESCRIPTION' ... OK
    checking extension type ... Package
    this is package 'mcompanion' version '0.5-2'
    checking package namespace information ... OK
    checking package dependencies ... OK
    checking if this is a source package ... OK

    ...

    checking PDF version of manual ... ERROR
    Rd conversion errors:
    Error in if (isBlankLineRd(x)) "\n" else if (identical(start, 1L)) psub("^\\s+", :
      missing value where TRUE/FALSE needed
    DONE

Status: 1 ERROR
#+END_EXAMPLE


* mcompanion v0.5-0

CRAN Package Check Results for Package mcompanion

Last updated on 2019-12-17 10:49:14 CET.

...

#+BEGIN_EXAMPLE
Version: 0.5-0
Check: PDF version of manual
Result: ERROR
    Rd conversion errors:
    Error in if (isBlankLineRd(x)) "\n" else if (identical(start, 1L)) psub("^\\s+", :
     missing value where TRUE/FALSE needed
Flavor: r-oldrel-osx-x86_64
#+END_EXAMPLE
Since the =else if= above uses ~identical()~ it seems that the error is caused by
~isBlankLineRd(x))~ returning ~NA~ (or something of length zero?).
#+BEGIN_SRC 
## tools:::isBlankLineRd
function (x) 
{
    utils:::getSrcByte(x) == 1L && length(grep("^[[:blank:]]*\n", 
        x, perl = TRUE)) == length(x)
}
<bytecode: 0x555ece2a0f00>
<environment: namespace:tools>
#+END_SRC
The =&&= above compares lengths, so ~utils:::getSrcByte(x)~ returns ~NA~ or a length~0 thing.
The body of ~utils:::getSrcByte()~ below seems to suggest that this comes from ~srcref[2L]~.
#+BEGIN_SRC 
> utils:::getSrcByte
function (x) 
{
    srcref <- attr(x, "srcref")
    if (is.null(srcref)) 
        -1L
    else srcref[2L]
}
<bytecode: 0x555ece2d18a8>
<environment: namespace:utils>
#+END_SRC
